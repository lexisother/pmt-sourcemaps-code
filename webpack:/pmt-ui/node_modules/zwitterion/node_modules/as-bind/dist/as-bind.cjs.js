'use strict';Object.defineProperty(exports,"__esModule",{value:!0});
var name="as-bind",description="Isomorphic library to handle passing high-level data structures between AssemblyScript and JavaScript \ud83e\udd1d\ud83d\ude80",version="0.6.0",main="dist/as-bind.cjs.js",module$1="dist/as-bind.esm.js",iife="dist/as-bind.iife.js",types="dist/as-bind.d.ts",scripts={build:"run-s lib:wasm:build lib:js:build",dev:"run-p lib:watch lib:test:watch",serve:"serve dist -p 8080",test:"mocha",lint:"prettier --write **/*.js **/*.ts **/*.json !build/**/* !dist/**/*","lint:ci":"prettier --check **/*.js **/*.ts **/*.json !build/**/* !dist/**/*",
"lib:watch":'chokidar --initial "lib/**/*" -c "run-s lib:wasm:build lib:js:build:dev test"',"lib:test:watch":'chokidar "test/**/*.js" "test/**/*.ts" -c "run-s lib:wasm:build lib:test:build test"',"lib:wasm:build":"run-s lib:wasm:build:debug lib:wasm:build:optimized lib:wasm:build:cp","lib:wasm:build:debug":"asc lib/assembly/as-bind.ts -b dist/as-bind.debug.wasm -t dist/as-bind.debug.wat --sourceMap --debug --exportRuntime","lib:wasm:build:optimized":"asc lib/assembly/as-bind.ts -b dist/as-bind.wasm --sourceMap dist/as-bind.wasm.map -t dist/as-bind.wat  -O3 --exportRuntime",
"lib:wasm:build:cp":"cpy 'lib/assembly/**/*' dist","lib:js:build":"rollup -c --environment LIB,PROD && cpy 'lib/as-bind.d.ts' dist","lib:js:build:dev":"rollup -c --environment LIB,DEV","lib:test:build":"run-s lib:test:build:entry lib:test:build:no-entry","lib:test:build:entry":"asc lib/assembly/as-bind.ts test/assembly/test.ts -b test/assembly/test.wasm --debug --runtime incremental --exportRuntime","lib:test:build:no-entry":"asc test/assembly/test.ts -b test/assembly/test-no-entry.wasm --debug --runtime incremental --exportRuntime",
"lib:deploy":"npm run build && np","md:build":"run-s md:wasm:build md:ts:build md:js:build","premd:dev":"npm run md:build","md:dev":"run-p lib:watch md:wasm:watch md:ts:watch md:js:watch serve","md:wasm:watch":'chokidar --initial "examples/markdown-parser/assembly/**/*" -c "run-s md:wasm:build"',"md:ts:watch":'chokidar --initial "examples/markdown-parser/assembly/**/*" -c "run-s md:ts:build"',"md:js:watch":'chokidar --initial "examples/markdown-parser/**/*" -c "rollup -c --environment MD,DEV"',"md:wasm:build":"asc lib/assembly/as-bind.ts examples/markdown-parser/assembly/index.ts -b dist/examples/markdown-parser/index.wasm -t dist/examples/markdown-parser/index.wat --sourceMap dist/examples/markdown-parser/index.wasm.map --runtime incremental --exportRuntime",
"md:ts:build":'tsc --project examples/markdown-parser/assembly/ --outDir dist/ts/ --module "es2015"',"md:js:build":"rollup -c --environment MD,PROD","md:deploy":"run-s build md:build md:deploy:gh-pages","md:deploy:gh-pages":"gh-pages -d dist/examples/markdown-parser"},husky={hooks:{"pre-commit":"pretty-quick --staged"}},devDependencies={"@ampproject/rollup-plugin-closure-compiler":"^0.25.2","@babel/core":"^7.5.5","@babel/plugin-proposal-class-properties":"^7.5.5","@babel/plugin-proposal-export-default-from":"^7.5.2",
"@babel/plugin-proposal-object-rest-spread":"^7.5.5","@babel/plugin-transform-react-jsx":"^7.3.0","babel-preset-es2015-rollup":"^3.0.0","chokidar-cli":"^2.0.0","cpy-cli":"^2.0.0","gh-pages":"^2.1.1",husky:"^3.0.5",mkdirp:"^0.5.1",mocha:"^6.2.0","normalize.css":"^8.0.1",np:"^5.2.1","npm-run-all":"^4.1.5","postcss-import":"^12.0.1",preact:"^8.5.2",prettier:"1.18.2","pretty-quick":"^1.11.1",rollup:"^1.20.2","rollup-plugin-babel":"^4.3.3","rollup-plugin-bundle-size":"^1.0.3","rollup-plugin-commonjs":"^10.1.0",
"rollup-plugin-copy":"^3.1.0","rollup-plugin-delete":"^1.1.0","rollup-plugin-hash":"^1.3.0","rollup-plugin-json":"^4.0.0","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-postcss":"^2.0.3","sakura.css":"^1.0.0",serve:"^11.2.0",typescript:"^3.9.2"},repository={type:"git",url:"git+https://github.com/torch2424/as-bind.git"},keywords="assemblyscript wasm bindgen bind type loader load strings object arrays assembly script typescript".split(" "),author="Aaron Turner",license="MIT",bugs={url:"https://github.com/torch2424/as-bind/issues"},
homepage="https://github.com/torch2424/as-bind#readme",dependencies={"@assemblyscript/loader":"~0.18.7",assemblyscript:"~0.18.7"},peerDependencies={"@assemblyscript/loader":"0.18.x",assemblyscript:"0.18.x"},packageJson={name,description,version,main,module:module$1,iife,types,scripts,husky,devDependencies,repository,keywords,author,license,bugs,homepage,dependencies,peerDependencies};
let ID_OFFSET=-8,SIZE_OFFSET=-4,ARRAYBUFFER_ID=0,STRING_ID=1,ARRAYBUFFERVIEW=1,ARRAY=2,STATICARRAY=4,VAL_ALIGN_OFFSET=6,VAL_SIGNED=2048,VAL_FLOAT=4096,VAL_MANAGED=16384,ARRAYBUFFERVIEW_BUFFER_OFFSET=0,ARRAYBUFFERVIEW_DATASTART_OFFSET=4,ARRAYBUFFERVIEW_DATALENGTH_OFFSET=8,ARRAYBUFFERVIEW_SIZE=12,ARRAY_LENGTH_OFFSET=12,ARRAY_SIZE=16,BIGINT="undefined"!==typeof BigUint64Array,THIS=Symbol(),STRING_DECODE_THRESHOLD=32,decoder=new TextDecoder("utf-16le");
function getStringImpl(a,b){let c=(new Uint32Array(a))[b+SIZE_OFFSET>>>2]>>>1;a=new Uint16Array(a,b,c);return c<=STRING_DECODE_THRESHOLD?String.fromCharCode.apply(String,a):decoder.decode(a)}
function preInstantiate(a){function b(a,b){return a?getStringImpl(a.buffer,b):"<yet unknown>"}let c={},d=a.env=a.env||{};d.abort=d.abort||function(a,f,g,k){let e=c.memory||d.memory;throw Error(`abort: ${b(e,a)} at ${b(e,f)}:${g}:${k}`);};d.trace=d.trace||function(a,f,...g){console.log(`trace: ${b(c.memory||d.memory,a)}${f?" ":""}${g.slice(0,f).join(", ")}`)};d.seed=d.seed||Date.now;a.Math=a.Math||Math;a.Date=a.Date||Date;return c}
let E_NOEXPORTRUNTIME="Operation requires compiling with --exportRuntime",F_NOEXPORTRUNTIME=function(){throw Error(E_NOEXPORTRUNTIME);};
function postInstantiate(a,b){function c(a){{var b=a;let c=new Uint32Array(l.buffer),h=c[p>>>2];if((b>>>=0)>=h)throw Error(`invalid id: ${b}`);b=c[(p+4>>>2)+2*b]}if(!(b&(ARRAYBUFFERVIEW|ARRAY|STATICARRAY)))throw Error(`not an array: ${a}, flags=${b}`);return b}function d(a,b,c){let h=l.buffer;if(c)switch(a){case 2:return new Float32Array(h);case 3:return new Float64Array(h)}else switch(a){case 0:return new (b?Int8Array:Uint8Array)(h);case 1:return new (b?Int16Array:Uint16Array)(h);case 2:return new (b?
Int32Array:Uint32Array)(h);case 3:return new (b?BigInt64Array:BigUint64Array)(h)}throw Error(`unsupported align: ${a}`);}function e(a){let b=new Uint32Array(l.buffer),h=c(b[a+ID_OFFSET>>>2]),n=31-Math.clz32(h>>>VAL_ALIGN_OFFSET&31),e=h&STATICARRAY?a:b[a+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];a=h&ARRAY?b[a+ARRAY_LENGTH_OFFSET>>>2]:b[e+SIZE_OFFSET>>>2]>>>n;return d(n,h&VAL_SIGNED,h&VAL_FLOAT).subarray(e>>>=n,e+a)}function f(a,b,c){return new a(g(a,b,c))}function g(a,b,c){let h=l.buffer,d=new Uint32Array(h);
c=d[c+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2];return new a(h,c,d[c+SIZE_OFFSET>>>2]>>>b)}function k(b,c,d){a[`__get${c}`]=f.bind(null,b,d);a[`__get${c}View`]=g.bind(null,b,d)}b=b.exports;let l=b.memory,m=b.table,n=b.__new||F_NOEXPORTRUNTIME,q=b.__pin||F_NOEXPORTRUNTIME,r=b.__unpin||F_NOEXPORTRUNTIME,t=b.__collect||F_NOEXPORTRUNTIME,p=b.__rtti_base||-1;a.__new=n;a.__pin=q;a.__unpin=r;a.__collect=t;a.__newString=function(a){if(null==a)return 0;let b=a.length,c=n(b<<1,STRING_ID),d=new Uint16Array(l.buffer);
for(var h=0,e=c>>>1;h<b;++h)d[e+h]=a.charCodeAt(h);return c};a.__getString=function(a){if(!a)return null;let b=l.buffer;if((new Uint32Array(b))[a+ID_OFFSET>>>2]!==STRING_ID)throw Error(`not a string: ${a}`);return getStringImpl(b,a)};a.__newArray=function(a,b){var h=c(a);let e=31-Math.clz32(h>>>VAL_ALIGN_OFFSET&31),k=b.length,f=n(k<<e,h&STATICARRAY?a:ARRAYBUFFER_ID);if(h&STATICARRAY)a=f;else{a=n(h&ARRAY?ARRAY_SIZE:ARRAYBUFFERVIEW_SIZE,a);var g=new Uint32Array(l.buffer);g[a+ARRAYBUFFERVIEW_BUFFER_OFFSET>>>
2]=f;g[a+ARRAYBUFFERVIEW_DATASTART_OFFSET>>>2]=f;g[a+ARRAYBUFFERVIEW_DATALENGTH_OFFSET>>>2]=k<<e;h&ARRAY&&(g[a+ARRAY_LENGTH_OFFSET>>>2]=k)}g=d(e,h&VAL_SIGNED,h&VAL_FLOAT);if(h&VAL_MANAGED)for(h=0;h<k;++h)g[(f>>>e)+h]=b[h];else g.set(b,f>>>e);return a};a.__getArrayView=e;a.__getArray=function(a){a=e(a);let b=a.length,c=Array(b);for(let d=0;d<b;d++)c[d]=a[d];return c};a.__getArrayBuffer=function(a){let b=l.buffer,c=(new Uint32Array(b))[a+SIZE_OFFSET>>>2];return b.slice(a,a+c)};[Int8Array,Uint8Array,
Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array].forEach(a=>{k(a,a.name,31-Math.clz32(a.BYTES_PER_ELEMENT))});BIGINT&&[BigUint64Array,BigInt64Array].forEach(a=>{k(a,a.name.slice(3),3)});a.__instanceof=function(a,b){var c=new Uint32Array(l.buffer);a=c[a+ID_OFFSET>>>2];if(a<=c[p>>>2]){do{if(a==b)return!0;{c=a;a=new Uint32Array(l.buffer);let b=a[p>>>2];if((c>>>=0)>=b)throw Error(`invalid id: ${c}`);a=a[(p+4>>>2)+2*c+1]}}while(a)}return!1};a.memory=a.memory||
l;a.table=a.table||m;return demangle(b,a)}function isResponse(a){return"undefined"!==typeof Response&&a instanceof Response}function isModule(a){return a instanceof WebAssembly.Module}async function instantiate(a,b={}){if(isResponse(a=await a))return instantiateStreaming(a,b);a=isModule(a)?a:await WebAssembly.compile(a);var c=preInstantiate(b);b=await WebAssembly.instantiate(a,b);c=postInstantiate(c,b);return{module:a,instance:b,exports:c}}
function instantiateSync(a,b={}){a=isModule(a)?a:new WebAssembly.Module(a);var c=preInstantiate(b);b=new WebAssembly.Instance(a,b);c=postInstantiate(c,b);return{module:a,instance:b,exports:c}}async function instantiateStreaming(a,b={}){if(!WebAssembly.instantiateStreaming)return instantiate(isResponse(a=await a)?a.arrayBuffer():a,b);var c=preInstantiate(b);a=await WebAssembly.instantiateStreaming(a,b);c=postInstantiate(c,a.instance);return{...a,exports:c}}
function demangle(a,b={}){let c=a.__argumentsLength?b=>{a.__argumentsLength.value=b}:a.__setArgumentsLength||a.__setargc||(()=>{});for(let f in a){if(!Object.prototype.hasOwnProperty.call(a,f))continue;let g=a[f];var d=f.split(".");let k=b;for(;1<d.length;){var e=d.shift();Object.prototype.hasOwnProperty.call(k,e)||(k[e]={});k=k[e]}d=d[0];e=d.indexOf("#");if(0<=e){let b=d.substring(0,e),m=k[b];if("undefined"===typeof m||!m.prototype){let a=function(...b){return a.wrap(a.prototype.constructor(0,...b))};
a.prototype={valueOf(){return this[THIS]}};a.wrap=function(b){return Object.create(a.prototype,{[THIS]:{value:b,writable:!1}})};m&&Object.getOwnPropertyNames(m).forEach(b=>Object.defineProperty(a,b,Object.getOwnPropertyDescriptor(m,b)));k[b]=a}d=d.substring(e+1);k=k[b].prototype;if(/^(get|set):/.test(d)){if(!Object.prototype.hasOwnProperty.call(k,d=d.substring(4))){let b=a[f.replace("set:","get:")],c=a[f.replace("get:","set:")];Object.defineProperty(k,d,{get(){return b(this[THIS])},set(a){c(this[THIS],
a)},enumerable:!0})}}else"constructor"===d?(k[d]=(...a)=>{c(a.length);return g(...a)}).original=g:(k[d]=function(...a){c(a.length);return g(this[THIS],...a)}).original=g}else/^(get|set):/.test(d)?Object.prototype.hasOwnProperty.call(k,d=d.substring(4))||Object.defineProperty(k,d,{get:a[f.replace("set:","get:")],set:a[f.replace("get:","set:")],enumerable:!0}):"function"===typeof g&&g!==c?(k[d]=(...a)=>{c(a.length);return g(...a)}).original=g:k[d]=g}return b}
var loader={instantiate,instantiateSync,instantiateStreaming,demangle};async function asbindInstantiate(a,b){let c=a instanceof Promise;c&&(a=await a);return(c?await loader.instantiateStreaming(a,b):await loader.instantiate(a,b)).exports}function asbindInstantiateSync(a,b){return loader.instantiateSync(a,b).exports}
let RESERVED_RUNTIME_EXPORT_KEYS="__newString __newArray __getString __getArrayBuffer __getArray __getArrayView __getInt8ArrayView __getUint8ArrayView __getUint8ClampedArrayView __getInt16ArrayView __getUint16ArrayView __getInt32ArrayView __getUint32ArrayView __getInt64ArrayView __getUint64ArrayView __getFloat32ArrayView __getFloat64ArrayView __new __renew __pin __unpin __instanceof __collect __rtti_base __alloc __allocArray __allocString".split(" "),REQUIRED_RUNTIME_EXPORT_KEYS="__new __newString __newArray __pin __unpin __instanceof __getString __getArrayBuffer __getArray __getArrayView __getInt8ArrayView __getUint8ArrayView __getUint8ClampedArrayView __getInt16ArrayView __getUint16ArrayView __getInt32ArrayView __getUint32ArrayView __getInt64ArrayView __getUint64ArrayView __getFloat32ArrayView __getFloat64ArrayView".split(" ");
function isReservedExportKey(a){return a.startsWith("__asbind")||RESERVED_RUNTIME_EXPORT_KEYS.includes(a)?!0:!1}
function validateExportsAndFunction(a,b){if("object"!==typeof a)throw Error("Did not pass a valid exports object of the WebAssembly Instance");if("function"!==typeof b)throw Error("Did not pass a valid exported function of the WebAssembly Instance");REQUIRED_RUNTIME_EXPORT_KEYS.forEach(b=>{if(!a[b])throw Error('Required Exported AssemblyScript Runtime functions are not present. Please compile your AssemblyScript with "--exportRuntime", and "--runtime" must be set to "incremental", "minimal", or "stub"');})}
let getUnsafeResponse=(a,b)=>({ptr:b,value:a}),SUPPORTED_REF_TYPES={STRING:{isTypeFromArgument:a=>"string"===typeof a,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_String_ID),getRef:(a,b)=>a.__pin(a.__newString(b)),getValueFromRef:(a,b)=>a.__getString(b)},INT8ARRAY:{isTypeFromArgument:a=>a instanceof Int8Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Int8Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Int8Array_ID,b)),getValueFromRef:(a,b)=>a.__getInt8Array(b),getUnsafeValueFromRef:(a,
b)=>getUnsafeResponse(a.__getInt8ArrayView(b),b)},UINT8ARRAY:{isTypeFromArgument:a=>a instanceof Uint8Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Uint8Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Uint8Array_ID,b)),getValueFromRef:(a,b)=>a.__getUint8Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getUint8ArrayView(b),b)},INT16ARRAY:{isTypeFromArgument:a=>a instanceof Int16Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Int16Array_ID),getRef:(a,b)=>
a.__pin(a.__newArray(a.__asbind_Int16Array_ID,b)),getValueFromRef:(a,b)=>a.__getInt16Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getInt16ArrayView(b),b)},UINT16ARRAY:{isTypeFromArgument:a=>a instanceof Uint16Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Uint16Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Uint16Array_ID,b)),getValueFromRef:(a,b)=>a.__getUint16Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getUint16ArrayView(b),b)},INT32ARRAY:{isTypeFromArgument:a=>
a instanceof Int32Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Int32Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Int32Array_ID,b)),getValueFromRef:(a,b)=>a.__getInt32Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getInt32ArrayView(b),b)},UINT32ARRAY:{isTypeFromArgument:a=>a instanceof Uint32Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Uint32Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Uint32Array_ID,b)),getValueFromRef:(a,b)=>a.__getUint32Array(b),
getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getUint32ArrayView(b),b)},FLOAT32ARRAY:{isTypeFromArgument:a=>a instanceof Float32Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Float32Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Float32Array_ID,b)),getValueFromRef:(a,b)=>a.__getFloat32Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getFloat32ArrayView(b),b)},FLOAT64ARRAY:{isTypeFromArgument:a=>a instanceof Float64Array,isTypeFromReference:(a,b)=>a.__instanceof(b,
a.__asbind_Float64Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Float64Array_ID,b)),getValueFromRef:(a,b)=>a.__getFloat64Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getFloat64ArrayView(b),b)},BIGINT64ARRAY:{isTypeFromArgument:a=>a instanceof BigInt64Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Int64Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Int64Array_ID,b)),getValueFromRef:(a,b)=>a.__getInt64Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getInt64ArrayView(b),
b)},BIGUINT64ARRAY:{isTypeFromArgument:a=>a instanceof BigUint64Array,isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_Uint64Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_Uint64Array_ID,b)),getValueFromRef:(a,b)=>a.__getInt64Array(b),getUnsafeValueFromRef:(a,b)=>getUnsafeResponse(a.__getInt64ArrayView(b),b)},I32ARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&Number.isInteger(a[0]),isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_I32Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_I32Array_ID,
b)),getValueFromRef:(a,b)=>a.__getArray(b)},I64ARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&"bigint"===typeof a[0],isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_I64Array_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_I64Array_ID,b)),getValueFromRef:(a,b)=>a.__getArray(b)},STRINGARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&"string"===typeof a[0],isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_StringArray_ID),getRef:(a,b)=>{b=b.map(b=>a.__pin(a.__newString(b)));return a.__pin(a.__newArray(a.__asbind_StringArray_ID,
b))},getValueFromRef:(a,b)=>a.__getArray(b).map(b=>a.__getString(b))},BOOLARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&"boolean"===typeof a[0],isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_BoolArray_ID),getRef:(a,b)=>a.__pin(a.__newArray(a.__asbind_BoolArray_ID,b)),getValueFromRef:(a,b)=>a.__getArray(b).map(a=>!!a)},I32ARRAYARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&Array.isArray(a[0])&&Number.isInteger(a[0][0]),isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_I32ArrayArray_ID),
getRef:(a,b)=>{b=b.map(b=>a.__pin(a.__newArray(a.__asbind_I32Array_ID,b)));return a.__pin(a.__newArray(a.__asbind_I32ArrayArray_ID,b))},getValueFromRef:(a,b)=>a.__getArray(b).map(b=>a.__getArray(b))},I64ARRAYARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&Array.isArray(a[0])&&"bigint"===typeof a[0][0],isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_I64ArrayArray_ID),getRef:(a,b)=>{b=b.map(b=>a.__pin(a.__newArray(a.__asbind_I64Array_ID,b)));return a.__pin(a.__newArray(a.__asbind_I64ArrayArray_ID,
b))},getValueFromRef:(a,b)=>a.__getArray(b).map(b=>a.__getArray(b))},STRINGARRAYARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&Array.isArray(a[0])&&"string"===typeof a[0][0],isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_StringArrayArray_ID),getRef:(a,b)=>{b=b.map(b=>{b=b.map(b=>a.__pin(a.__newString(b)));return a.__pin(a.__newArray(a.__asbind_StringArray_ID,b))});return a.__pin(a.__newArray(a.__asbind_StringArrayArray_ID,b))},getValueFromRef:(a,b)=>a.__getArray(b).map(b=>a.__getArray(b).map(b=>
a.__getString(b)))},BOOLARRAYARRAY:{isTypeFromArgument:a=>Array.isArray(a)&&Array.isArray(a[0])&&"boolean"===typeof a[0][0],isTypeFromReference:(a,b)=>a.__instanceof(b,a.__asbind_BoolArrayArray_ID),getRef:(a,b)=>{b=b.map(b=>a.__pin(a.__newArray(a.__asbind_BoolArray_ID,b)));return a.__pin(a.__newArray(a.__asbind_BoolArrayArray_ID,b))},getValueFromRef:(a,b)=>a.__getArray(b).map(b=>a.__getArray(b).map(a=>!!a))}},RETURN_TYPES={NUMBER:"NUMBER"};
for(let a of Object.keys(SUPPORTED_REF_TYPES))RETURN_TYPES[a]=a;
function bindImportFunction(a,b,c){let d=(a,b)=>{a=a[b[0]];b.shift();return 0<b.length?d(a,b):a},e=d(b,[...c]),f=b,g=function(){const g=a.unboundExports;f===b&&(f=d(b,[...c]));const l=[];Array.prototype.slice.call(arguments).forEach((a,b)=>{let c=void 0;f.shouldCacheTypes&&f.cachedArgTypes[b]&&"ref"===f.cachedArgTypes[b].type?c=SUPPORTED_REF_TYPES[f.cachedArgTypes[b].key]:Object.keys(SUPPORTED_REF_TYPES).some(d=>SUPPORTED_REF_TYPES[d].isTypeFromReference(g,a)?(c=SUPPORTED_REF_TYPES[d],f.shouldCacheTypes&&
(f.cachedArgTypes[b]={type:"ref",key:d}),!0):!1);c?l.push(c.getValueFromRef(g,a)):l.push(a)});return e.apply(null,l)};g.shouldCacheTypes=!0;g.cachedArgTypes=[];return g}
function bindExportFunction(a,b){let c=a.unboundExports,d=c[b];validateExportsAndFunction(c,d);let e=a.exports,f=function(){var g=Array.prototype.slice.call(arguments);e===a.exports&&(e=a.exports[b]);const f=[],l=[];g.forEach((a,b)=>{if("number"===typeof a)f.push(a),e.shouldCacheTypes&&(e.cachedArgTypes[b]={type:"number"});else{var d=void 0;if(e.shouldCacheTypes&&e.cachedArgTypes[b]&&"ref"===e.cachedArgTypes[b].type)d=SUPPORTED_REF_TYPES[e.cachedArgTypes[b].key];else if(Object.keys(SUPPORTED_REF_TYPES).some(c=>
SUPPORTED_REF_TYPES[c].isTypeFromArgument(a)?(d=SUPPORTED_REF_TYPES[c],e.shouldCacheTypes&&(e.cachedArgTypes[b]={type:"ref",key:c}),!0):!1),!d)throw Error(`The argument, ${a}, is not a supported type by asbind`);f.push(d.getRef(c,a));l.push(b)}});const m=d.apply(null,f);l.forEach(a=>{c.__unpin(f[a])});g=void 0;if(void 0!==m){let a=void 0;e.returnType?SUPPORTED_REF_TYPES[e.returnType]&&(a=SUPPORTED_REF_TYPES[e.returnType]):e.shouldCacheTypes&&e.cachedReturnTypes[0]?"ref"===e.cachedReturnTypes[0].type&&
(a=SUPPORTED_REF_TYPES[e.cachedReturnTypes[0].key]):Object.keys(SUPPORTED_REF_TYPES).some(b=>SUPPORTED_REF_TYPES[b].isTypeFromReference(c,m)?(a=SUPPORTED_REF_TYPES[b],e.shouldCacheTypes&&(e.cachedReturnTypes[0]={type:"ref",key:b}),!0):!1);a?g=e.unsafeReturnValue&&a.getUnsafeValueFromRef?a.getUnsafeValueFromRef(c,m):a.getValueFromRef(c,m):"number"===typeof m&&(g=m,e.shouldCacheTypes&&!e.returnType&&(e.cachedReturnTypes[0]={type:"number"}))}return g};f.shouldCacheTypes=!0;f.unsafeReturnValue=!1;f.returnType=
null;f.cachedArgTypes=[];f.cachedReturnTypes=[];return f}let traverseObjectAndRunCallbackForFunctions=(a,b,c)=>{a&&Object.keys(a).forEach(d=>{"function"===typeof a[d]?c(a,b,d):"object"===typeof a[d]&&traverseObjectAndRunCallbackForFunctions(a[d],[...b,d],c)})};
class AsbindInstance{constructor(){this.unboundExports={};this.exports={};this.importObject={}}async _instantiate(a,b){this._instantiateBindImportFunctions(b);a=await asbindInstantiate(a,this.importObject);this._instantiateBindUnboundExports(a)}_instantiateSync(a,b){this._instantiateBindImportFunctions(b);a=asbindInstantiateSync(a,this.importObject);this._instantiateBindUnboundExports(a)}_instantiateBindImportFunctions(a){this.importObject=a;traverseObjectAndRunCallbackForFunctions(this.importObject,
[],(a,c,d)=>{a[`__asbind_unbound_${d}`]=a[d];a[d]=bindImportFunction(this,this.importObject,[...c,d])})}_instantiateBindUnboundExports(a){this.unboundExports=a;if(!this.unboundExports.__asbind_entryfile_flag||0===this.unboundExports.__asbind_entryfile_flag)throw Error("as-bind: The instantiated AssemblyScript wasm module was not built with the as-bind entryfile. Please see the as-bind documentation (Quick Start), and rebuild your AssemblyScript wasm module.");this.exports={};Object.keys(this.unboundExports).forEach(a=>
{"function"!==typeof this.unboundExports[a]||isReservedExportKey(a)?this.exports[a]=this.unboundExports[a]:this.exports[a]=bindExportFunction(this,a)})}enableExportFunctionTypeCaching(){Object.keys(this.exports).forEach(a=>{this.exports[a]&&(this.exports[a].shouldCacheTypes=!0)})}disableExportFunctionTypeCaching(){Object.keys(this.exports).forEach(a=>{this.exports[a]&&(this.exports[a].shouldCacheTypes=!1)})}enableExportFunctionUnsafeReturnValue(){Object.keys(this.exports).forEach(a=>{this.exports[a]&&
(this.exports[a].unsafeReturnValue=!0)})}disableExportFunctionUnsafeReturnValue(){Object.keys(this.exports).forEach(a=>{this.exports[a]&&(this.exports[a].unsafeReturnValue=!1)})}enableImportFunctionTypeCaching(){traverseObjectAndRunCallbackForFunctions(this.importObject,[],(a,b,c)=>{a[c].shouldCacheTypes=!0})}disableImportFunctionTypeCaching(){traverseObjectAndRunCallbackForFunctions(this.importObject,[],(a,b,c)=>{a[c].shouldCacheTypes=!1})}}
let AsBind={version:packageJson.version,RETURN_TYPES,instantiate:async(a,b)=>{let c=new AsbindInstance;await c._instantiate(a,b);return c},instantiateSync:(a,b)=>{let c=new AsbindInstance;c._instantiateSync(a,b);return c}},AsBindLib=AsBind;exports.AsBind=AsBind;exports.default=AsBindLib
