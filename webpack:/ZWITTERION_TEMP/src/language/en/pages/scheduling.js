const translations = {
    topBar: {
        publicHoliday: 'Caution: public holiday ({0})',
    },
    printSettings: {
        title: 'Print setting',
        showDayRemarks: 'Show day remarks',
        showDayTotals: 'Show day totals',
        showDepartmentTotalsTotals: 'Show department totals',
        showProductive: 'Show productive',
        showNonProductive: 'Show non-productive',
        showIndirectTasks: 'Show indirect tasks',
        showRdos: 'Show approved leave requests',
        showNotScheduledEmployees: 'Show employees without schedule',
        printTable: {
            productive: 'Productive',
            nonProductive: 'Non productive',
            indirectTasks: 'Indirect tasks',
            absent: 'Absent',
            remark: 'Remark',
            showNotPlanned: 'Not planned',
            dayTotal: 'Day total',
        },
        printOptions: 'Print options',
    },
    pageSettings: {
        settings: {
            title: 'Settings',
            items: {
                weekStatus: 'Week status',
                toggleGrouping: 'Group on department / employee',
            },
        },
        extraWindows: {
            title: 'Extra windows',
            items: {
                steerInformation: 'Steer Information',
                steerInformationExtended: 'Extended steer information',
                workloadChart: 'Occupational information',
                analyse: 'Analyse',
                weekNotReleased: 'Not available because week has not been released',
            },
        },
        gridDisplay: {
            title: 'Grid display',
            items: {
                breaks: 'Breaks',
                pendingRdo: 'Pending leave request',
                approvedRdo: 'Approved leave',
                approvedSubstituteRequests: 'Approved substitute requests',
                totals: 'Totals',
                availabilities: 'Availabilities',
                nonAvailabilities: 'Non-Availabilities',
                employeeTotals: 'Day total + non-productive without start/endtime',
                employeeTotalsWeek: 'Week totals',
                wabWarnings: 'WAB Warnings',
                hideUnrelatedDepartmentShifts: 'Hide unrelated department shifts',
                alwaysShowAvailabilityWeekViewEmployeeClick: 'Show availability when selecting an employee',
                alwaysShowRemarksWeekViewEmployeeClick: 'Show dayremarks when selecting an employee',
                alwaysShowAllRemarks: 'Show dayremarks always for every employee',
                showNormPlannedHours: 'Norm | Planned | Deviation',
                expandMultipleCheckHoursEmployees: 'Expand multiple employees',
                compactView: 'Compact view',
            },
        },
    },
    publishPopUp: {
        publish: 'Publish',
        disabled: 'Publishing of this schedule is not possible',
        noChanges: 'Select at least 1 department',
        blockingNotifications: 'There are notifications which block the sending of this schedule. Please adress them first',
        overlapingShifts: 'There are overlapping shifts which block the sending of this schedule. Please adress them first',
        title: {
            finalize: 'Publish schedule',
            publish: 'Publish schedule',
            close: 'Close department(s)',
            reopen: 'Reopen department(s)',
        },
        saveNotification: 'Are you sure you want to close this popup? All entered data will be lost.',
        saveButtons: {
            finalize: 'Publish',
            publish: 'Publish',
            close: 'Close',
            reopen: 'Reopen',
            publishDisabled: 'You cannot publish schedules in weeks that are in the past',
            closeDisabled: 'Closing the departments will become available on saturday',
        },
        allDepartments: 'All departments',
        publishDayRemarks: 'Publish daily comments',
        publishExchangeShifts: 'Publish exchange shifts',
        noExchangePublishableShiftsFound: 'No exchange shifts found that need publishing',
        extraLabels: {
            reopened: 'reopened',
            emailNotSent: 'not sent',
        },
        overruleWarnings: 'You are about the publish the schedules while there are blocking notifications. Are you sure you want to continue?',
        apiActions: {
            finalized: 'The selected department(s) are published',
            closed: 'The selected department(s) are closed',
            reopened: 'The selected department(s) are reopened',
        },
    },
    weekStatus: {
        title: 'Week status',
        statusTooltip: 'Last changed on:',
        notificationPanel: 'There are 9 notifcations that block the publishing of this schedule',
        notificationPanelShowNotifications: 'Show notifications',
        statuses: {
            released: 'Released',
            draft: 'Not Released',
            undefined: 'Not released',
            closed: 'Closed',
        },
        departmentStatuses: {
            finalized: 'Published',
            changed: 'Changed',
            concept: 'Concept',
            closed: 'Closed',
        },
        openAll: 'Open all',
        closeAll: 'Close all',
        weekIs: 'This week is {status}',
        info: {
            closed: 'You cannot edit nor publish the schedules for this week',
            released: 'You can create or change schedules and publish them directly',
            draft: 'You can edit the schedules for this week, but you cannot publish any changes yet',
        },
    },
    steerInformation: {
        showMore: 'Show more',
        showLess: 'Show less data',
        data: {
            productive_hours: 'Hours',
            productive_costs: 'Costs',
            average_hourly_wage: 'Average wage / h',
            productivity: 'Productivity / h',
            turnover: 'Turnover',
            expected: 'Expected',
            realized: 'Realized',
        },
        dataType: {
            norm: 'Norm',
            planned: 'Planned',
            expected: 'Expected',
            deviation: 'Deviation',
        },
        allDepartments: 'All departments',
        departmentTypes: {
            turnover: 'Turnover departments',
            cost: 'Cost departments',
            external: 'External departments',
        },
        costDepartmentTotalsHidden: 'You combined at least 1 cost department in your selection. Productivity and turnover information have no meaning in this case. To see this information, select only 1 individual cost department.',
    },
    workload: {
        title: 'Occupation',
        legend: {
            productive_hours: 'Planned hours',
            workload: 'Workload',
            difference: 'Difference',
            productive_hours_tooltip: 'Productive hours',
        },
        competenceTooltip: 'There are {amount} employee(s) available for {name} on {date}',
        allDepartments: 'All departments',
    },
    emptyState: {
        storeIsClosed: 'Store closed',
        noShiftsForFilters: {
            title: 'No shifts matches found',
            subTitle: 'You are using some filters. Change filters to see results.',
        },
        noEmployeeSelected: {
            title: 'No employee is selected',
            subTitle: 'Select an employee to see their shifts',
        },
        notImplementedOnMobile: {
            title: 'This page does not work on mobile.',
            subTitle: 'Please open this page on destop.',
        },
    },
    resourceColumns: {
        name: {
            label: '-',
            labelShort: 'Name',
        },
        personnel_number: {
            label: 'Employee Number',
            labelShort: 'No.',
        },
        lpgu: {
            label: 'Wage per hour',
            labelShort: 'LPGU',
        },
        age: {
            label: '-',
            labelShort: 'Age',
        },
        contractType: {
            label: 'Contract type',
            labelShort: 'Type',
        },
        contractHours: {
            label: 'Contract hours',
            labelShort: 'Contr.',
        },
        plannedHours: {
            label: 'Planned hours',
            labelShort: 'Planned',
        },
        deviation: {
            label: 'Deviation between contract and planned hours',
            labelShort: 'Dev.',
        },
        wab: {
            label: 'Max hours | Hours planned | Percentage planned',
            labelShort: 'WAB',
            period: 'Period',
        },
        cao: {
            label: 'CAO notifications',
            labelShort: 'CAO',
        },
        remark: {
            label: 'Remarks',
            labelShort: 'Rem.',
        },
        departments: {
            label: 'Sort on departments count',
            labelShort: 'Dep.',
        },
        vak: {
            label: 'Current leave balance (end of week)',
            labelShort: 'Leave',
        },
        atv: {
            label: 'Current ATV balance (end of week)',
            labelShort: 'ATV',
        },
        tvt: {
            label: 'Current TVT balance (end of week)',
            labelShort: 'TVT',
        },
        competences: {
            label: 'Competences',
            labelShort: 'Competences',
        },
        startTime: {
            label: '-',
            labelShort: 'Shift start time',
        },
        employee_first_name: {
            label: '-',
            labelShort: 'First Name',
        },
        employee_last_name: {
            label: '-',
            labelShort: 'Last Name',
        },
        nonProductive: {
            label: 'Non-Productive',
            labelShort: 'NP',
        },
        productiveHours: {
            labelShort: 'PH',
            label: 'Productive hours',
        },
        nonProductiveHours: {
            labelShort: 'NPH',
            label: 'Non productive hours',
        },
        surcharges: {
            labelShort: 'Surch.',
            label: 'Surcharges',
        },
        compensation: {
            labelShort: 'Comp.',
            label: 'Compensation',
        },
        employeeChecked: {
            labelShort: 'Checked',
            label: 'Checked',
        },
        correction: {
            labelShort: 'CR',
            label: 'Correction',
        },
        status: {
            label: 'Status',
        },
        employee_cell_phone: {
            labelShort: 'Phone',
            label: 'Cell phone',
        },
    },
    resources: {
        unassigned: 'Not assigned shifts',
    },
    tooltips: {
        chooseVisibleColumns: 'Show/Hide columns',
        chooseSortColumn: 'Sort by',
        searchEmployees: 'Search employees',
        expander: 'Show {0} columns',
        readOnlyShift: 'This shift is read-only',
        readOnlyNoSSRAccess: 'You can not edit this shift because you do not have access to edit substitute requests',
        lentOutToStore: 'Lent out to: {name}',
        lentInFromStore: 'Lent in from: {name}',
        rdo: {
            pending: 'Pending leave request',
            approved: 'Approved leave',
        },
        approvedSubstituteRequest: 'Approved substitute',
        available: 'Available: {availabilityType}',
        notAvailable: 'Not available: {availabilityType}',
        availableSimple: 'Available',
        notAvailableSimple: 'Not available',
        hasSubstituteRequests: 'Substitute request',
        substituteRequestsCount: 'request was sent to {0} employees',
        cannotEditCurrentBreaks: 'You cannot edit breaks in the past or present',
        cannotEditFutureBreaks: 'You cannot edit breaks in the future',
        substituteShiftAssignedTo: 'The substitute shift was assigned to {name}',
        weeklyRemarks: 'Weekly remarks',
        everyWeek: 'Frequency: every week',
        everyXWeeks: 'Frequency: every {weeks} weeks',
        recurringTitle: 'This shift if part of a recurring pattern (standard schedule).',
        startsPreviousWeek: 'Shift starts previous week',
        startsPreviousDay: 'Shift starts previous day',
        endsNextWeek: 'Shifts ends next week',
        endsNextDay: 'Shifts ends next day',
        showSentSchedules: 'Show sent schedules for this department',
        backToSchedulingPage: 'Back to scheduling page',
        availability: 'Availability',
    },
    grouping: 'Grouping',
    groupByDepartment: 'Group by Department',
    shiftPopover: {
        titles: {
            newSchedule: 'New Schedule',
            newNonProductive: 'New Non-Productive hours',
            editSchedule: 'Edit Schedule',
            editNonProductive: 'Edit non-productive hours',
            viewSchedule: 'Schedule',
            viewNonProductive: 'Non-Productive hours',
            notAssigned: 'Not-Assigned Shift',
            newNotAssigned: 'New not assigned shift',
            editNotAssignedShift: 'Edit not-assigned shift',
        },
        startTime: 'Start time',
        endTime: 'End time',
        duration: 'Only duration',
        productiveHours: 'Productive hours',
        nonProductiveHours: 'Non-Productive hours',
        startEndTimes: 'With start and end times',
        break: 'Break',
        deleteRemark: 'Delete remark',
        shiftSaved: 'Shift saved successfully.',
        isNotIncludedInFiltersTitle: 'Not included in the applied filters',
        isNotIncludedInFilters: 'Department is not included in the applied filters.',
        nonEditableInfo: {
            time: 'Time',
            shift: 'This shift is related to a department that you do not have access to',
        },
        enableOverTheNightShift: 'Shift spans to the next day',
        overTheNightShift: 'Overnight shift',
        shiftAssignedTo: 'Shift was assigned to {0}',
        shiftUnAssignedFrom: 'Shift was un-assigned from {0}',
        substituteRequestRejected: 'Substitute request rejected.',
        clearStore: 'Stop lending out',
        clearInput: 'clear',
        shiftTabs: {
            productive: 'Productive shift',
            indirectTasks: 'Indirect Tasks',
        },
        indirectTasks: {
            title: 'Indirect tasks',
            taskType: 'Task type',
            selectTask: 'Select task',
            duration: 'Duration',
            addAnother: 'Add indirect task',
            allTasksAlreadyAdded: 'You cannot add any more tasks. All available indirect tasks are already added.',
            noLongerThanShiftDuration: 'You cannot add indirect tasks that exceed the duration of the shift ({0}). Update shift start/end times to be able to increase the indirect hours duration.',
            created: 'Indirect Tasks created',
            saved: 'Indirect Tasks changed',
            deleted: 'Indirect Tasks deleted.',
        },
        nonProductive: {
            bookableHourType: 'PMT Code',
            bookableHourTypeForeignOption: 'Wage Code',
            onlyAvailableWithDuration: '(only available with duration)',
        },
        outsideEmployeeDepartments: 'Not part of {name}\'s departments',
        outsideEmployeeDepartmentsStandard: 'This is a futurue department for {name}',
        storeNumber: 'Store number',
        storeNotAvailableForExchange: 'Store no longer available for exchange.',
        cannotBeTransferredToDate: 'Shift cannot be transferred to this date, because employee then is unemployed or without contract',
        cannotAssignShiftToReadOnlyEmployee: 'You are not allowed to adjust the schedule for {name}',
    },
    editCreateRemarkForm: {
        title: 'Day Remark',
        recurringRemark: 'This day remark is part of a standard schedule. Changes are only saved for the selected day',
    },
    deleteShift: {
        shiftDeleted: 'Shift removed',
        cancelShiftDeleted: 'Undo',
    },
    shortcutsMenu: {
        weekView: 'Week view',
        dayView: 'Day view',
        nextDay: 'Next day',
        previousDay: 'Previous day',
        nextWeek: 'Next week',
        previousWeek: 'Previous week',
        filters: 'Filters',
        publish: 'Publish',
        addNew: 'Add new',
        selectDay: 'Select day',
        navigation: 'Navigation',
        view: 'View',
        grid: 'Grid',
        selectPreviousEmployee: 'Select previous employee',
        selectNextEmployee: 'Select next employee',
        closeOrUnselectEmployee: 'Close anything open or deselect an emplyee',
        copyShift: 'Copy a selected shift',
        pasteShift: 'Paste shift (hover or select a cell)',
        deleteShift: 'Delete a selected shift',
    },
    contextMenu: {
        editSchedule: 'Edit Schedule',
        assignEmployee: 'Assign employee',
        removeEmployee: 'Remove employee from shift',
        changeEmployee: 'Change employee',
        otherEmployees: 'Other employees',
        allEmployees: 'Show all employees',
        lessEmployees: 'Show less employees',
        addEmployeeRemark: 'Add employee remark',
        editEmployeeRemark: 'Edit employee remark',
        deleteEmployeeRemark: 'Delete employee remark',
        lendOutEmployee: 'Lend out employee',
        lendOutShift: 'Lend out shift',
        lentInEmployee: 'Lent in employee',
        addIndirectTask: 'Indirect tasks',
        assessSubstituteRequest: 'Assess substitute request',
        rejectSubstituteRequest: 'Reject substitute request',
        noSuggestionsForShift: 'No suggestions available for this shift',
        isFullyAvailable: 'Matches with the employee\'s preferred availability',
    },
    otherEmployeeSelector: {
        title: 'Assign employee to shift',
    },
    substituteRequests: {
        overrideExisting: 'A pending substitute request exists for this shift. Editing this shift will result in rejecting the substitute request. Do you want to continue?',
        substituteRequest: 'Substitute Request',
    },
    rdos: {
        allDay: 'All day',
        rdo: 'LEAVE REQUEST',
    },
    placeholders: {
        selectStoreFirst: 'Select a store first',
        selectStore: 'Select a store',
        selectDepartment: 'Select a department',
        selectEmployee: 'Select an employee',
        selectBookableHourType: 'Select PMT Code',
        selectBookableHourTypeForeignOption: 'Select Wage Code',
    },
    overlap: {
        businessTimes: 'Business times',
        startEndsBusinessTimes: 'Shift {payload} outside the store business times',
        starts: 'starts',
        ends: 'ends',
        startsEnds: 'starts and ends',
        employeeNotAvailableForTimes: 'This employee is not (fully) available',
        notAvailableForTimes: 'Not (fully) available',
        schoolTimes: 'School times',
        sportTimes: 'Sport times',
        otherTimes: 'Other times',
        shift: 'This employee has another shift at the specified time-frame',
        dayIsClosed: 'Day is closed',
    },
    warnings: {
        extraPayout: 'Editing the shift may result in extra payout.',
        extraPayoutInfo: 'This situation applies',
        cannotOverlap: 'Cannot overlap with another shift',
        cannotDecreaseCurrentBreaks: 'You cannot decrease break times for past and present shifts.',
        cannotDecreaseFutureBreaks: 'You cannot decrease break times for future shifts.',
        cannotDecreaseBreaks: 'You cannot set a break time lower than {breakTime} to this shift',
        cannotBeLongerThan24Hours: 'A shift cannot be longer than 24 hours',
        cannotAssignShiftToEmployee: 'Cannot assign {department} shift to {employee}',
        notificationsFor: 'Notifications for',
        employmentDateWarning: 'Employment starts on',
        unemploymentDateWarning: 'Employment ends on',
        contractEndWarning: 'Contract ends on',
        selectValidWeekday: 'You cannot move shifts outside of the week-grid',
        allDepartmentsAreClosed: 'All departments are closed',
        weekNotReleased: 'Not available. The week is not yet released',
        previousWeekNotClosed: 'Not available. Previous week is not currently closed.',
        cannotExchangeWithIndirectTasks: 'You cannot exchange a shift with indirect tasks',
    },
    schedulingNotifications: {
        generalBlocking: 'There are {0} blocking notifications',
        rm1: '{0} employee(s) do not meet their contract hours',
        pendingAvailabilityRequests: '{0} employee(s) have pending availability requests.',
        pendingRdoRequests: '{0} employee(s) have pending rdo requests.',
        pendingSubstituteRequests: '{0} employee(s) have pending substitute requests.',
        co80: '{0} employee(s) have at least 1 shift planned on a Sunday or public holiday',
        wab2: '{0} employee(s) have exceeded WAB 100%',
        wab3: '{0} employee(s) have exceeded WAB 130%',
        cla: '{0} employee(s) have blocking CAO warnings',
        blockingAtw: '{0} employee(s) have blocking ATW warnings',
        overlapNonPlannable: '{0} employee(s) have blocking overlap overlap',
        scheduleExceedsNorm: '{0} employee(s) have blocking shifts based on norm hours',
        rm30: '{0} employees have a ATW or CLA violation that requires your attention',
        rm40: '{0} employee(s) have shifts starting or ending outside of the store business hours',
        rm50: 'There are {0} overlapping productive and/or non-productive shifts in the selected week',
        rm60: 'Planned hours exceed the hourly norm on department level for {0} department(s)',
        rm70: 'Planned hours exceed the hourly norm on store level',
        rm80: 'Wage costs exceed the wage costs norm on store level',
        claWarnings: '{0} employee(s) have a ATW or CLA violation that requires your attention',
        links: {
            general: 'You can assess these via',
            'pending-substitutes': 'the Planning page',
            'leave-and-absence-page': 'the Leave/Absence page',
            'availability-overview-init': 'the Availability overview',
        },
        blockingIcon: 'There is at least 1 pending warning for this department. Please check all red notifications',
    },
    assessSubtituteRequest: {
        title: 'Assess substitute request',
        requestedBy: 'By',
        requestedOn: 'On',
        shiftDate: 'Date',
        shiftTimes: 'Times',
        shiftDepartment: 'Department',
        shiftRemark: 'Remark',
        selectEmployeeToAssign: 'Select an employee to assign',
        assignShiftTo: 'Assign shift to {name}',
        ssrReply: 'Reply',
        ssrReplyStatus: {
            '-1': 'Not interested',
            0: '(no reaction)',
            1: 'Interested',
        },
        shift: 'Shift',
        request: 'Request',
    },
    employment: {
        title: 'Employee is not employed',
        from: 'Employment: {date}',
        to: 'Unemployment: {date}',
        contractEndTitle: 'Contract is expired',
        contractEnd: 'Contract end: {date}',
        unemployed: 'Unemployed',
        expiredContract: 'Contract expired',
    },
    weekDetails: {
        title: 'Week {weekYear} details',
        characteristic: 'Characteristic',
        description: 'Description',
        empty: 'No characteristic or description is set for this week.',
    },
    standardShifts: {
        titles: {
            shifts: 'Standard shifts',
            remarks: 'Standard day remarks',
            addNewShiftsFrequency: 'New standard shift schedule',
            editShiftsFrequency: 'Edit standard shift schedule',
            addNewRemarksFrequency: 'New standard day remark schedule',
            editRemarksFrequency: 'Edit standard day remark schedule',
        },
        frequencyModal: {
            frequency: 'Frequency',
            startWeek: 'Start week',
            endWeek: 'End week',
            selectStartWeek: 'Select start week',
            selectEndWeek: 'Select end week',
            bothWeeks: 'start and end-week',
            noneOfSchedules: 'none of the schedules',
            firstPossibleWeek: 'first possible start week',
            firstPossibleEndWeek: 'first possible end week',
        },
        tooltips: {
            cannotDeleteEmptyRow: 'Cannot delete a row without shifts',
            cannotEditPastFrequency: 'You cannot edit or delete standard schedules with an end date in the past',
            noEndDate: 'Standard shifts will repeat indefinitely.',
            noEndDateRemarks: 'Standard remarks will repeat indefinitely.',
            cannotEditFrequency: 'You can no longer edit the frequency of this standard schedule. Please create a new one.',
            cannotEditStartWeek: 'You can no longer edit the start week of this standard schedule. Please create a new one.',
            copyToNewRow: 'Create a new standard schedule based on these repeating shifts.',
            newRowAlreadyExists: 'There is already a new row added for {employeeName}',
            noPermissionToEditRemarks: 'You do not have permission to edit standard remarks.',
            noPermissionToEditStandardShifts: 'You do not have permission to edit standard shifts',
            claValidationOutcomes: 'CLA Validations',
            caorules: 'CAO Rules',
        },
        info: {
            unEmployementDate: 'Unemployment date: {date}',
            employementDate: 'Employment date: {date}',
            overlap: 'This employee has another shift at the specified time-frame. Check all standard schedules of this employee',
        },
        warnings: {
            cannotOverlapWithOtherStandardSchedules: 'This employee already has a standard schedule with the same start-week and frequency',
            changeResultsInOverlappingShifts: 'The new frequency or start week that you selected makes this standard schedule overlap with another standard schedule for the same employee. Please check all standard schedules of this employee.',
        },
        frequencyHeader: {
            title: 'Frequency - Period',
            frequency: 'Frequency',
            startWeek: 'Start week',
            endWeek: 'End week',
            actions: 'Actions',
        },
    },
    apiErrors: {
        base: 'We could not fetch the following information for you:',
        availabilities: 'Availabilities',
        availabilityWeeksets: 'Availability weeksets',
        requestsDayOff: 'RDO requests',
        weekDetails: 'Week details',
        breaks: 'Break time suggestions',
        wagePerHour: 'Labor costs',
        wabCounters: 'WAB-counters',
        balances: 'RDO balances',
        contracts: 'Contracts',
        indirectTasks: 'Indirect tasks',
        indirectHours: 'Indirect hours',
        storeGroups: 'Store groups',
        claSettings: 'CLA Settings',
        bookableHourTypes: 'PMT codes',
        times: 'Business times',
        scheduleSubstituteRequests: 'Substitute requests',
        dayRemarks: 'Day remarks',
        finalizeDepartments: 'Scheduling notifications',
        publicHolidays: 'Public holidays',
        periods: 'Period tables',
        steerInformation: 'Steer information',
        timeDistribution: 'Workload information',
        claValidationOutcomes: 'CLA Validations',
        caorules: 'CAO Rules',
        remarks: 'Remarks',
        standardRemarks: 'Standard remarks',
        standardShifts: 'Standard shifts',

        // Critical ones, customers will probably never see these translations but on the off chance they do I put them in here
        employees: 'Employees',
        departments: 'Departments',
        shifts: 'Shifts',
        weekStatus: 'Week status',
        weekDepartmentStatus: 'Department statuses',

        // messages
        pageFailedLoading: 'The page failed loading. Please try again.',
        problemKeepsOccuring: 'Does the problem keep occuring?',
        contactUs: 'Then contact us',
    },
    articleHelperTitle: 'Short introduction for new page: Create planning',
    checkHours: {
        planningPageLabel: 'Planning Page',
        someOpenDepartments: 'There are {departments-count} {departments-pluralization} which are not yet closed.',
        gotToPlanningPage: 'Go to the {action} to close these departments',
        departmentNotClosed: 'This department is not yet closed. Go to the Create Planning page to close this department',
    },
    copyPaste: {
        errors: {
            notCopied: 'No shift has been copied yet',
            weekClosed: 'Week is closed',
            departmentClosed: 'Department for copied shift is closed',
            readOnly: 'Employee is read only',
            lentOut: 'Lent out shifts can not be copied',
            lentIn: 'Lent in shifts can not be copied',
        },
    },
    employeeDetails: 'Employee details',
    nothingPlanned: 'Nothing planned',
    productive: 'Productive',
    nonProductive: 'Non productive',
    shifts: 'Shifts',
    weekCloseNotifications: {
        balance_limits: 'The balance limits are exceeded for {employeeCount} employees.',
        week_surcharges: 'There are overtime surcharge booking of type OTG for {employeeCount} employees. Please adjust these to type OTT.',
        employee_contract_hours: 'Less hours are booked than contract hours for {employeeCount} employees. Please input leave, ATV or if there is no balance for both, unpaid leave hours.',
        employee_agreed_hours: 'The total of leave and worked hours is above agreed hours for {employeeCount} employees.',
        employee_special_hours: '.', // This rule has no notification (only an automatic action on week close, without notifying the user).
        profit_retail_sync_conditions: 'There are hours booked after contract end date for {employeeCount} employees. Delete the hours in Check Hours, or extend the contract in profit and perform an employee sync.',
        period_totals: 'There are {employeeCount} employees that have more than 152 booked hours for the period. Please adjust the booked hours.',
        violations_for_rule_hv40: 'There are {employeeCount} employees that have too few or too many hours booked, compared to the contract. Please enter leave, ATV or if there is no balance for both, unpaid leave hours.',
        excess_payout_hours: 'There are {employeeCount} employees that the total of hours for payout may not exceed contract hours. Adjust the TVTM hours to be able to close the week',
        to1_contract_hours: 'Booked hours are not equal to contract hours for {employeeCount} employees.',
        unpaid_leave_hours: 'There are {employeeCount} employees that have unpaid leave hours.',
        v_hours: '.', // This rule has no notification (only an automatic action on week close, without notifying the user).
        holiday_schedules: 'There are {employeeCount} employees that are now allowed to have schedules on Sunday or on public holidays. Adjust the shifts or contact Coop cost management.',
        tts_rule: 'There are {employeeCount} employees that are not entitled to have TTS hours booked. Remove these hours to be able to close the week.',
        cla_violations: 'There are {employeeCount} employees for which the schedule does not comply with CLA and/or ATW rules.',
        to30_non_productive_hours: 'There are {employeeCount} employees with fixed contract hours, for whom more non-productive hours have been booked than agreed in their contract.',
        to40_non_productive_hours: 'There are {employeeCount} on-call workers for whom more non-productive hours have been booked than the maximum number of hours as stipulated in their contract',
    },
    closeWeek: 'Close week',
    reopenWeek: 'Reopen week',
}

export default translations
