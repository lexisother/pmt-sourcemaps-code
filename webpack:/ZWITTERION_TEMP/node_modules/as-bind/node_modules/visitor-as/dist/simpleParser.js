
        var process = self.process;
        if (!self.ZWITTERION_SOCKET && self.location.host.includes('localhost:')) {
            self.ZWITTERION_SOCKET = new WebSocket('ws://127.0.0.1:5001');
            self.ZWITTERION_SOCKET.addEventListener('message', (message) => {
                self.location.reload();
            });
        }
        "use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SimpleParser = void 0;
const as_1 = require("../as");
class SimpleParser {
  static getTokenizer(s) {
    return new as_1.Tokenizer(new as_1.Source(as_1.SourceKind.USER, "index.ts", s));
  }
  static parseExpression(s) {
    let res = this.parser.parseExpression(this.getTokenizer(s));
    if (res == null) {
      throw new Error("Failed to parse the expression: '" + s + "'");
    }
    return res;
  }
  static parseStatement(s, topLevel = false) {
    let res = this.parser.parseStatement(this.getTokenizer(s), topLevel);
    if (res == null) {
      throw new Error("Failed to parse the statement: '" + s + "'");
    }
    return res;
  }
}
exports.SimpleParser = SimpleParser;
SimpleParser.parser = new as_1.Parser();
    