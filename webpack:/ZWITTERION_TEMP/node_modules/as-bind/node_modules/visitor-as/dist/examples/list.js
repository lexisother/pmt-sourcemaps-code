
        var process = self.process;
        if (!self.ZWITTERION_SOCKET && self.location.host.includes('localhost:')) {
            self.ZWITTERION_SOCKET = new WebSocket('ws://127.0.0.1:5001');
            self.ZWITTERION_SOCKET.addEventListener('message', (message) => {
                self.location.reload();
            });
        }
        "use strict";

const decorator_1 = require("../decorator");
const utils_1 = require("../utils");
class ListMembers extends decorator_1.ClassDecorator {
  visitFieldDeclaration(node) {
    if (!node.name) console.log(utils_1.toString(node) + "\n");
    const name = utils_1.toString(node.name);
    const _type = utils_1.toString(node.type);
    this.stdout.write(name + ": " + _type + "\n");
  }
  visitMethodDeclaration(node) {
    const name = utils_1.toString(node.name);
    if (name == "constructor") {
      return;
    }
    const sig = utils_1.toString(node.signature);
    this.stdout.write(name + ": " + sig + "\n");
  }
  visitClassDeclaration(node) {
    this.visit(node.members);
  }
  get name() {
    return "list";
  }
}
module.exports = decorator_1.registerDecorator(new ListMembers());
    